<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
<!--
=========================================================================
GenerateWatchList

Main target called by dotnet-watch. It gathers MSBuild items and writes
them to a file.
=========================================================================
-->
  <UsingTask AssemblyFile="$(MSBuildThisFileDirectory)LayoutAnalyzerTasks.dll"
             TaskName="FileSetSerializer" />

  <Target Name="GenerateWatchList"
          DependsOnTargets="_CollectWatchItems;_CollectTFWs">

    <FileSetSerializer
       OutputPath="$(_DotNetWatchListFile)"
       WatchFiles="@(Watch)"
       TargetFrameworks="@(TFW)"/>
  </Target>

  <PropertyGroup>
    <_CollectTFWsDependsOn Condition=" '$(TargetFrameworks)' != '' and '$(TargetFramework)' == '' ">
      _CollectTFWsPerFramework;
    </_CollectTFWsDependsOn>
    <_CollectTFWsDependsOn Condition=" '$(TargetFramework)' != '' ">
      _CoreCollectTFWs
    </_CollectTFWsDependsOn>
  </PropertyGroup>

  <Target Name="_CollectTFWs"
          DependsOnTargets="$(_CollectTFWsDependsOn)"
          Returns="@(TFW)" />

  <Target Name="_CollectTFWsPerFramework">
    <ItemGroup>
      <_TargetFramework Include="$(TargetFrameworks)" />
    </ItemGroup>

    <MSBuild Projects="$(MSBuildProjectFullPath)"
             Targets="_CoreCollectTFWs"
             Properties="TargetFramework=%(_TargetFramework.Identity)">
      <Output TaskParameter="TargetOutputs"
              ItemName="TFW" />
    </MSBuild>
  </Target>

  <Target Name="_CoreCollectTFWs"
          Returns="@(TFW)">

    <Message Importance="High"
             Text="Collecting target frameworks from '$(MSBuildProjectName)' [$(TargetFramework)]"
             Condition="'$(_DotNetWatchTraceOutput)'=='true'" />

    <Error Text="TargetFramework should be set"
           Condition="'$(TargetFramework)' == '' "/>

    <ItemGroup>
      <TFW Include="$(TargetFramework)"
           Identifier="$(TargetFrameworkIdentifier)"
           Version="$(TargetFrameworkVersion)"
           Path="$(TargetPath)" />
    </ItemGroup>

  </Target>

<!--
=========================================================================
_CollectWatchItems

Gathers all files to be watched.
Returns: @(Watch)
=========================================================================
-->
  <PropertyGroup>
    <_CollectWatchItemsDependsOn Condition=" '$(TargetFrameworks)' != '' and '$(TargetFramework)' == '' ">
      _CollectWatchItemsPerFramework;
    </_CollectWatchItemsDependsOn>
    <_CollectWatchItemsDependsOn Condition=" '$(TargetFramework)' != '' ">
      _CoreCollectWatchItems;
    </_CollectWatchItemsDependsOn>
  </PropertyGroup>

  <Target Name="_CollectWatchItems"
          DependsOnTargets="$(_CollectWatchItemsDependsOn)"
          Returns="@(Watch)">
    <ItemGroup>
      <Watch ProjectFullPath="$(MSBuildProjectFullPath)"
             Condition="'%(Watch.ProjectFullPath)' == ''" />
    </ItemGroup>
  </Target>

  <Target Name="_CollectWatchItemsPerFramework">
    <ItemGroup>
      <_TargetFramework Include="$(TargetFrameworks)" />
    </ItemGroup>

    <MSBuild Projects="$(MSBuildProjectFullPath)"
             Targets="_CoreCollectWatchItems"
             Properties="TargetFramework=%(_TargetFramework.Identity)">
      <Output TaskParameter="TargetOutputs"
              ItemName="Watch" />
    </MSBuild>
  </Target>

  <Target Name="_CoreCollectWatchItems"
          Returns="@(Watch)">

    <Message Importance="High"
             Text="Collecting watch items from '$(MSBuildProjectName)' [$(TargetFramework)]"
             Condition="'$(_DotNetWatchTraceOutput)'=='true'" />

    <Error Text="TargetFramework should be set"
           Condition="'$(TargetFramework)' == '' "/>

    <ItemGroup>
      <Watch Include="%(Compile.FullPath)"
             TFW="$(TargetFramework)"
             Condition="'%(Compile.Watch)' != 'false'" />
      <Watch Include="%(EmbeddedResource.FullPath)"
             TFW="$(TargetFramework)"
             Condition="'%(EmbeddedResource.Watch)' != 'false'"/>
      <Watch Include="$(MSBuildProjectFullPath)"
             TFW="$(TargetFramework)" />

      <_WatchProjects Include="%(ProjectReference.Identity)"
                      Condition="'%(ProjectReference.Watch)' != 'false'" />
    </ItemGroup>

    <MSBuild Projects="@(_WatchProjects)"
             Targets="_CollectWatchItems"
             BuildInParallel="true">
      <Output TaskParameter="TargetOutputs"
              ItemName="Watch" />
    </MSBuild>

  </Target>

</Project>
